<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Copy 2 elements to &apos;DSAProblems/src/com.test&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Destination element: &apos;DSAProblems/src/com.test&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     MaxSubArray.java&#x0D;&#x0A;     MergeTwoArray.java" description="Copy compilation units" destination="/src&lt;com.test" element1="/src&lt;{MaxSubArray.java" element2="/src&lt;{MergeTwoArray.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1693731120036" units="2" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original element: &apos;MaxSubArray.java&apos;" description="Delete element" element1="/src&lt;{MaxSubArray.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1693731132269" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original element: &apos;MergeTwoArray.java&apos;" description="Delete element" element1="/src&lt;{MergeTwoArray.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1693731133637" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;j&apos; from expression &apos;collect.get(start) + collect.get(end)&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;j&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.TwoSumInpArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;collect.get(start) + collect.get(end)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;j&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test{TwoSumInpArray.java" name="j" replace="true" selection="1134 35" stamp="1693732988084" varType="false" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;com.test&apos; to &apos;com.test.two.pointer&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original element: &apos;DSAProblems/src/com.test&apos;&#x0D;&#x0A;- Renamed element: &apos;DSAProblems/src/com.test.two.pointer&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;com.test&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;com.test" name="com.test.two.pointer" qualified="false" references="true" stamp="1693977064850" textual="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.test.two.pointer.CountPairsLessThanTarget.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.test.two.pointer{CountPairsLessThanTarget.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1693982500564" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.test.two.pointer.CountPairsLessThanTarget.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.test.two.pointer{CountPairsLessThanTarget.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1693982789804" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean solution1(String n)&apos; from &apos;com.test.two.pointer.StrictlyPalindromicNumber.check(...)&apos; to &apos;com.test.two.pointer.StrictlyPalindromicNumber&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Method name: &apos;solution1&apos;&#x0D;&#x0A;- Destination type: &apos;com.test.two.pointer.StrictlyPalindromicNumber&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;solution1&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.test.two.pointer{StrictlyPalindromicNumber.java" name="solution1" replace="false" selection="1393 210" stamp="1693997464695" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;b&apos; from expression &apos;num &gt;= 2 * diff&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;b&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.ArithemticTriplets.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;num &gt;= 2 * diff&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;b&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{ArithemticTriplets.java" name="b" replace="true" selection="483 15" stamp="1693999168355" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;c&apos; from expression &apos;count[num - diff]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;c&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.ArithemticTriplets.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;count[num - diff]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;c&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{ArithemticTriplets.java" name="c" replace="true" selection="521 17" stamp="1693999177555" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;d&apos; from expression &apos;count[num - 2 * diff]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;d&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.ArithemticTriplets.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;count[num - 2 * diff]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;d&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{ArithemticTriplets.java" name="d" replace="true" selection="561 21" stamp="1693999185514" varType="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.test.two.pointer.Pascal.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.test.two.pointer{Pascal.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1694166793977" version="1.0"/>
</session>