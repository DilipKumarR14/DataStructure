<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;abs&apos; from expression &apos;Math.abs(profit)&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;abs&apos;&#x0D;&#x0A;- Destination method: &apos;com.leetcode.array.StockBuying.maxProfit(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Math.abs(profit)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;abs&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.leetcode.array{StockBuying.java" name="abs" replace="true" selection="426 16" stamp="1706504289313" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;k&apos; from expression &apos;prices[j] - prices[i]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;k&apos;&#x0D;&#x0A;- Destination method: &apos;com.leetcode.array.StockBuying.maxProfit(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;prices[j] - prices[i]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;k&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.leetcode.array{StockBuying.java" name="k" replace="true" selection="378 21" stamp="1706504618438" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;i&apos; from expression &apos;nums1[index1]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;i&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.DiffArray.findDifference(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;nums1[index1]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;i&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{DiffArray.java" name="i" replace="true" selection="650 13" stamp="1706520437092" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;j&apos; from expression &apos;nums2[index2]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;j&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.DiffArray.findDifference(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;nums2[index2]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;j&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{DiffArray.java" name="j" replace="true" selection="681 13" stamp="1706520442637" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;i&apos; from expression &apos;nums1[index1]&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Variable name: &apos;i&apos;&#x0D;&#x0A;- Destination method: &apos;com.test.two.pointer.DiffArray.findDifference(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;nums1[index1]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;i&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.test.two.pointer{DiffArray.java" name="i" replace="true" selection="596 13" stamp="1706520837546" varType="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;DSAProblems&apos;&#x0D;&#x0A;- Original project: &apos;DSAProblems&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.test.arrays.neetcode.PascalTriangle.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.test.arrays.neetcode{PascalTriangle.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1706607786003" version="1.0"/>
</session>